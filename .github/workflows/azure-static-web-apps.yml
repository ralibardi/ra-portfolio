# This workflow builds and deploys a Node.js application to an Azure Web App upon commits to the main branch.
#
# Prerequisites:
# - A GitHub secret named NODE_VERSION with the Node.js version as its value.
# - A GitHub secret named PUBLIC_URL with the public URL as its value.
# - A GitHub secret named API_URL with the API URL as its value.
# - A GitHub secret named CHROMATIC_PROJECT_TOKEN with the Chromatic project token as its value.
# - A GitHub secret named SONAR_ORGANISATION with the SonarCloud organization as its value.
# - A GitHub secret named SONAR_PROJECT_KEY with the SonarCloud project key as its value.
# - A GitHub secret named SONAR_PROJECT_NAME with the SonarCloud project name as its value.
# - A GitHub secret named TOKEN_GITHUB with the GitHub token as its value.
# - A GitHub secret named TOKEN_SONAR with the SonarCloud token as its value.
# - A GitHub secret named AZURE_STATIC_WEB_APPS_API_TOKEN with the Azure Static Web Apps API token as its value.

name: Deploy to Azure Workflow

on:
  push:
    branches:
      - main 

  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ secrets.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install
        continue-on-error: false

      - name: Build
        run: npm run build
        env:
          NODE_ENV: 'production'
          PUBLIC_URL: ${{ secrets.PUBLIC_URL }}
          API_URL: ${{ secrets.API_URL }}
        continue-on-error: false

      - name: Run lint
        run: npm run lint
        continue-on-error: false

      - name: Run tests and collect coverage
        run: npm run test:coverage
        continue-on-error: false

      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-artifact
          path: ./coverage

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-artifact
          path: ./coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          SONAR_TOKEN: ${{ secrets.TOKEN_SONAR }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANISATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.projectName=${{ secrets.SONAR_PROJECT_NAME }}
        continue-on-error: false

      - name: SonarCloud Quality Gate Check
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.TOKEN_SONAR }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANISATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.qualitygate.wait=true
        continue-on-error: false

  deploy:
    needs: sonarcloud
    name: Deploy to Azure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/"
          api_location: ""
          output_location: "dist"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          app_location: "/"
          api_location: ""
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
