name: Deploy to Azure Workflow

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: ${{ secrets.NODE_VERSION }}
  PUBLIC_URL: ${{ secrets.PUBLIC_URL }}
  API_URL: ${{ secrets.API_URL }}
  CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
  SONAR_ORGANISATION: ${{ secrets.SONAR_ORGANISATION }}
  SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
  SONAR_PROJECT_NAME: ${{ secrets.SONAR_PROJECT_NAME }}
  TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
  TOKEN_SONAR: ${{ secrets.TOKEN_SONAR }}
  AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}

jobs:
  build_test_and_deploy:
    name: Build, Test, and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - run: npm ci

      - name: Build and Test
        run: |
          npm run build
          npm run lint
          npm run test:coverage
        env:
          NODE_ENV: 'production'

      - uses: chromaui/action@latest
        with:
          projectToken: ${{ env.CHROMATIC_PROJECT_TOKEN }}

      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ env.TOKEN_GITHUB }}
          SONAR_TOKEN: ${{ env.TOKEN_SONAR }}
        with:
          args: >
            -Dsonar.organization=${{ env.SONAR_ORGANISATION }}
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.projectName=${{ env.SONAR_PROJECT_NAME }}

      - name: SonarCloud Quality Gate Check
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ env.TOKEN_SONAR }}
        with:
          args: >
            -Dsonar.organization=${{ env.SONAR_ORGANISATION }}
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.qualitygate.wait=true

      - name: Deploy to Azure
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/"
          api_location: ""
          output_location: "dist"

  close_pull_request:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
          app_location: "/"
          api_location: ""
