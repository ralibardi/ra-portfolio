name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ secrets.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install
        continue-on-error: false

      - name: Build
        run: npm run build
        env:
          NODE_ENV: 'production'
          PUBLIC_URL: ${{ secrets.PUBLIC_URL }}
          API_URL: ${{ secrets.API_URL }}
        continue-on-error: false

      - name: Run lint
        run: npm run lint
        continue-on-error: false

      - name: Run tests and collect coverage
        run: npm run test:coverage
        continue-on-error: false

      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ./dist

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-artifact
          path: ./coverage

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-artifact
          path: ./coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          SONAR_TOKEN: ${{ secrets.TOKEN_SONAR }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANISATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.projectName=${{ secrets.SONAR_PROJECT_NAME }}
        continue-on-error: false

      - name: SonarCloud Quality Gate Check
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.TOKEN_SONAR }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANISATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.qualitygate.wait=true
        continue-on-error: false

  deploy:
    needs: sonarcloud
    name: Deploy to Azure
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./dist

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Check if Web App exists
        id: check_app
        shell: bash
        run: |
          EXISTS=$(az webapp list --query "[?name=='${{ secrets.AZURE_WEBAPP_NAME }}'].name" -o tsv)
          if [ -z "$EXISTS" ]; then
            echo "WebApp does not exist, setting CREATE_APP to true."
            echo "CREATE_APP=true" >> $GITHUB_ENV
          else
            echo "WebApp exists, no need to create."
            echo "CREATE_APP=false" >> $GITHUB_ENV
          fi

      - name: Create Web App if it does not exist
        if: steps.check_app.outputs.CREATE_APP == 'true'
        run: |
          az webapp create --name ${{ secrets.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --plan ${{ secrets.AZURE_SERVICE_APP_PLAN }} --runtime "NODE|${{ secrets.NODE_VERSION }}"

      - name: Prepare prod.parameters.json
        run: |
          $json = Get-Content -Path .azuredevops/prod.parameters.json -Raw | ConvertFrom-Json
          $json.parameters.subscriptionId.value = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          $json.parameters.resourceGroupName.value = "${{ secrets.AZURE_RESOURCE_GROUP }}"
          $json.parameters.name.value = "${{ secrets.AZURE_WEBAPP_NAME }}"
          $json.parameters.location.value = "${{ secrets.AZURE_LOCATION }}"
          $json.parameters.hostingPlanName.value = "${{ secrets.AZURE_SERVICE_APP_PLAN }}"
          $json.parameters.serverFarmResourceGroup.value = "${{ secrets.AZURE_RESOURCE_GROUP }}"
          $json | ConvertTo-Json -Depth 100 | Set-Content -Path ./prod.parameters.json
        shell: pwsh

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ICY_MEADOW_0218FEC03 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "build" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ICY_MEADOW_0218FEC03 }}
          action: "close"
